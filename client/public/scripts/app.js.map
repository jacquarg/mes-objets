{"version":3,"file":"public/scripts/app.js","sources":["app/application.js","app/collections/receiptdetails.js","app/collections/receipts.js","app/collections/sections.js","app/collections/transactions.js","app/initialize.js","app/models/receipt.js","app/models/receiptdetail.js","app/models/section.js","app/models/transaction.js","app/router.js","app/templates/app.jade","app/templates/modal_step1.jade","app/templates/preview.jade","app/templates/transaction.jade","app/views/app.js","app/views/modal_step1.js","app/views/preview.js","app/views/transaction.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;;A,CCAA;;AACA;AACA;AACA;AACA;AAJA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxBA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzDA;;A,CCAA;;AACA;AACA;AAFA;;A,CCAA;;AACA;AACA;AAFA;;A,CCAA;;AACA;AACA;AAFA;;A,CCAA;;AACA;AADA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArEA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/BA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5FA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzFA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBA;;A","sourcesContent":["module.exports = {\n\n    initialize: function() {\n        var Router = require('router');\n        this.router = new Router();\n        Backbone.history.start();\n    }\n};","ReceiptDetail = require('../models/receiptdetail');\n\nmodule.exports = ReceiptDetails = Backbone.Collection.extend({\n    model: ReceiptDetail,\n    url: 'receiptdetails',\n    seed: function(){\n        console.log('receipt seeding :D')\n        this.create({\n            id: '123',\n            barcode: \"1234567890\"\n        })\n    }\n})\n","Receipt = require('../models/receipt');\nmodule.exports = Receipts = Backbone.Collection.extend({\n    model: Receipt,\n    url: 'receipts'\n})","Section = require('../models/section');\nmodule.exports = Sections = Backbone.Collection.extend({\n\n    initialize: function(models, options) {\n        this.receiptId = options.receiptId;\n    },\n\n    url: function() {\n        return 'receipts/' + this.receiptId + '/sections';\n    },\n    model: Section,\n\n});","Transaction = require('../models/transaction');\n\nmodule.exports = Transactions = Backbone.Collection.extend({\n    model: Transaction,\n    url: 'transactions',\n    // seed: function(){\n    //     // not working\n    //     console.log('seeding!')\n    //     this.create({\n    //         id:\"1231512512341512412\",\n    //         title: \"Pelle à picous\",\n    //         comment: \"Très belle pelle\",\n    //         trace: [\n    //                 \"intermarché\"\n    //             ],\n    //         category: [\n    //             \"Bricolage\",\n    //             \"Pelle\",\n    //             \"Pelle à picous\"\n    //         ],\n    //         barcode: \"1248193523\",\n    //         url: \"http://pelle-a-picous.love\"\n    //     });\n    // }\n});","// The function called from index.html\n$(document).ready(function() {\n    var app = require('application');\n    app.initialize()\n\n    $(document).foundation();\n});\n\nwindow.reinitilizeLocalValues = function(){\n    window.local = {\n        selectedTicket: undefined,\n        selectedItem: undefined,\n        selectedItemId: undefined\n    }\n    $('.dynOption option').remove()\n    $('.dynOption').append('<option class=\"option_placeholder\">- Choisissez une option -<option>')\n}\nreinitilizeLocalValues()\n\nwindow.prettyDate = function(rawDate) {\n        d = new Date(rawDate)\n        jour = d.getDate()\n        mois = d.getMonth()\n        annee = d.getFullYear()\n        heure = d.getHours()\n        minute = d.getMinutes()\n\n        if (minute < 10){ minute = \"0\" + minute;}\n        if (jour < 10){ jour = \"0\" + jour;}\n\n\n        if (mois == 0){ mois = \"Jan\";}\n        if (mois == 1){ mois = \"Fev\";}\n        if (mois == 2){ mois = \"Mar\";}\n        if (mois == 3){ mois = \"Avr\";}\n        if (mois == 4){ mois = \"Mai\";}\n        if (mois == 5){ mois = \"Jun\";}\n        if (mois == 6){ mois = \"Jui\";}\n        if (mois == 7){ mois = \"Aou\";}\n        if (mois == 8){ mois = \"Sep\";}\n        if (mois == 9){ mois = \"Oct\";}\n        if (mois == 10){ mois = \"Nov\";}\n        if (mois == 11){ mois = \"Dec\";}\n        return jour + \"-\" + mois + \"-\" + annee + \", \" + heure + \":\" + minute\n};\n\n\nString.prototype.upAndDownCase = function(){\n    return this.charAt(0).toUpperCase() + this.slice(1).toLowerCase();\n}\n\n\nwindow.listToReorder = function(listToReorder,listitems){\n    listitems.sort(function(a, b) {\n       return $(a).text().toUpperCase().localeCompare($(b).text().toUpperCase());\n    })\n    $.each(listitems, function(idx, itm) { listToReorder.append(itm); });\n}","module.exports = Receipt = Backbone.Model.extend({\n\n})","module.exports = ReceiptDetail = Backbone.Model.extend({\n\n})","module.exports = Section = Backbone.Model.extend({\n\n});","module.exports = Transaction = Backbone.Model.extend({\n});","var AppView = require('views/app');\nvar TransactionCollection = require('collections/transactions');\nvar ReceiptDetailCollection = require('collections/receiptdetails');\n\nvar transactions = new TransactionCollection();\nvar receiptdetails = new ReceiptDetailCollection();\n\nmodule.exports = Router = Backbone.Router.extend({\n\n    routes: {\n        '': 'main'\n    },\n\n    main: function() {\n        var mainView = new AppView({\n            collection: transactions,\n            receiptcollection: receiptdetails\n        });\n        mainView.render();\n    }\n});","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div class=\"row\"><div class=\"large-8 columns\"><h1>Transactions Tracker</h1><p>This application will help you manage your transactions!</p></div><div id=\"menu\" class=\"large-4 columns\"><a id=\"addtransacbutton\" href=\"#\" data-reveal-id=\"step1\" class=\"success radius button\">Ajouter une transaction</a></div></div><div class=\"row\"><table><thead><tr><th width=\"100%\">Title</th><th>Categories</th><th>Barcode</th><th>URL</th><th>Traces</th><th>Comments</th><th>Action</th></tr></thead><tbody></tbody></table><div id=\"preview\" class=\"panel\"><p><em>Selectionnez une transaction</em></p></div></div><footer><div class=\"row\"><div class=\"text-center columns\"><a id=\"tour\" href=\"#\" class=\"radius button\">Visite guidée</a></div><!--<Reveal>Modals begin</Reveal>--><div id=\"step1\" data-reveal=\"data-reveal\" class=\"reveal-modal\"></div><div id=\"step2\" data-reveal=\"data-reveal\" class=\"reveal-modal\"><form data-abide=\"data-abide\"><h2>Etape 2 : Compléter les données récoltées</h2><p>Ajoutez des informations ou éditez celles collectées</p><div id=\"title\"><label>Titre:</label><input type=\"text\" name=\"title\" required=\"required\"/></div><div id=\"barcode\"><label>Code barre:</label><input type=\"text\" name=\"barcode\" required pattern=\"number\"/></div><div id=\"comment\"><label>Comment: (optionel)</label><textarea name=\"comment\"></textarea></div><div id=\"url\"><label>Url: (optionel)</label><input type=\"text\" name=\"url\" pattern=\"url\"/></div><a href=\"#\" id=\"add-transaction\" type=\"submit\" class=\"success radius button right\">Valider la nouvelle transaction</a><a href=\"#\" data-reveal-id=\"step1\" type=\"submit\" id=\"prev\" class=\"radius button\">Retour à l\\'étape 1</a></form><a class=\"close-reveal-modal\">×</a></div><!--<Reveal>Modals end</Reveal>--></div></footer>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<h2>Etape 1 : Attacher des preuves d\\'achat</h2><p>Choisissez les données relatives à l\\'objet que vous souhaitez ajouter à votre inventaire</p><form><div id=\"sources\" class=\"fields\"><label class=\"superlab\">Source</label><select id=\"source\" name=\"source\"><option value=\"null\">* Choisissez une source d\\'information *</option><option value=\"intermarche\">Intermarché</option><option value=\"manuel\">Ajout manuel</option></select></div><div id=\"receipts\" class=\"fields\"><label class=\"superlab\">Tickets de caisse</label><select id=\"receipt\" name=\"receipt\" class=\"dynOption\"><option value=\"null\">* Choisissez un ticket de caisse *</option></select></div><div id=\"receiptelements\" class=\"fields\"><label class=\"superlab\">Détails du ticket<select id=\"receipt_details\" name=\"receipt_details\" class=\"dynOption\"><option value=\"null\">* Choisissez une ligne du ticket *</option></select></label></div><div id=\"detailspreview\" class=\"panel\"></div><div id=\"additionaldata\" class=\"panel\"></div></form><div id=\"manualbarcode\"><span>ou entrer le code bar manuellement<input placeholder=\"barcode\"/></span></div><a href=\"#\" data-reveal-id=\"step2\" type=\"submit\" id=\"next\" class=\"success radius button right\">Etape 2...</a><a class=\"close-reveal-modal\">×</a>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div class=\"row\"><div class=\"large-4 small-12 columns\"><div class=\"row\"><div class=\"large-6 small-12 columns\"><span><strong>Nom de l\\'article</strong></span></div><div class=\"large-6 small-12 columns\"><span>');\nif ( typeof name !== \"undefined\")\n{\nvar __val__ = name\nbuf.push(escape(null == __val__ ? \"\" : __val__));\n}\nbuf.push('</span></div></div><div class=\"row\"><div class=\"large-6 small-12 columns\"><span><strong>Quantité</strong></span></div><div class=\"large-6 small-12 columns\"><span>');\nif ( typeof amount !== \"undefined\")\n{\nvar __val__ = amount\nbuf.push(escape(null == __val__ ? \"\" : __val__));\n}\nbuf.push('</span></div></div><div class=\"row\"><div class=\"large-6 small-12 columns\"><span><strong>Prix</strong></span></div><div class=\"large-6 small-12 columns\"><span>');\nif ( typeof price !== \"undefined\")\n{\nvar __val__ = price + \" €\"\nbuf.push(escape(null == __val__ ? \"\" : __val__));\n}\nbuf.push('</span></div></div><div class=\"row\"><div class=\"large-6 small-12 columns\"><span><strong>Quantité</strong></span></div><div class=\"large-6 small-12 columns\"><span>');\nif ( typeof quantityLabel !== \"undefined\")\n{\nvar __val__ = quantityLabel\nbuf.push(escape(null == __val__ ? \"\" : __val__));\n}\nbuf.push('</span></div></div><div class=\"row\"><div class=\"large-6 small-12 columns\"><span><strong>Code Barre</strong></span></div><div class=\"large-6 small-12 columns\"><span>');\nif ( typeof barcode !== \"undefined\")\n{\nvar __val__ = barcode\nbuf.push(escape(null == __val__ ? \"\" : __val__));\n}\nbuf.push('</span></div></div><div class=\"row\"><div class=\"large-6 small-12 columns\"><span><strong>Label</strong></span></div><div class=\"large-6 small-12 columns\"><span>');\nif ( typeof label !== \"undefined\")\n{\nvar __val__ = label\nbuf.push(escape(null == __val__ ? \"\" : __val__));\n}\nbuf.push('</span></div></div><div class=\"row\"><div class=\"large-6 small-12 columns\"><span><strong>Section</strong></span></div><div class=\"large-6 small-12 columns\"><span>');\nif ( typeof sectionLabel !== \"undefined\")\n{\nvar __val__ = sectionLabel\nbuf.push(escape(null == __val__ ? \"\" : __val__));\n}\nbuf.push('</span></div></div><div class=\"row\"><div class=\"large-6 small-12 columns\"><span><strong>Identifiant du magasin</strong></span></div><div class=\"large-6 small-12 columns\"><span>');\nif ( typeof intermarcheShopId !== \"undefined\")\n{\nvar __val__ = intermarcheShopId\nbuf.push(escape(null == __val__ ? \"\" : __val__));\n}\nbuf.push('</span></div></div><div class=\"row\"><div class=\"large-6 small-12 columns\"><span><strong>Date</strong></span></div><div class=\"large-6 small-12 columns\"><span>');\nif ( typeof timestamp !== \"undefined\")\n{\nvar __val__ = prettyDate(timestamp)\nbuf.push(escape(null == __val__ ? \"\" : __val__));\n}\nbuf.push('</span></div></div></div><div class=\"large-4 small-12 columns\">');\nif ( barcode.lenght = 13)\n{\nbuf.push('<img');\nbuf.push(attrs({ 'src':('http://drive.intermarche.com/ressources/images/produit/zoom/0' + (barcode) + '.jpg'), 'alt':('' + (name) + ''), 'id':('preview_image') }, {\"src\":true,\"alt\":true,\"id\":true}));\nbuf.push('/>');\n}\nbuf.push('</div></div>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<td><a');\nbuf.push(attrs({ 'href':(\"transaction#show/\" + (transaction.id) + \"\") }, {\"href\":true}));\nbuf.push('>');\nvar __val__ = transaction.title\nbuf.push(escape(null == __val__ ? \"\" : __val__));\nbuf.push('</a></td><td><span>');\nvar __val__ = transaction.category\nbuf.push(escape(null == __val__ ? \"\" : __val__));\nbuf.push('</span><br/><span>');\nvar __val__ = transaction.subcategory\nbuf.push(escape(null == __val__ ? \"\" : __val__));\nbuf.push('</span><br/><span>');\nvar __val__ = transaction.subsubcategory\nbuf.push(escape(null == __val__ ? \"\" : __val__));\nbuf.push('</span><br/></td><td><span>');\nvar __val__ = transaction.barcode\nbuf.push(escape(null == __val__ ? \"\" : __val__));\nbuf.push('</span></td><td><span>');\nvar __val__ = transaction.url\nbuf.push(escape(null == __val__ ? \"\" : __val__));\nbuf.push('</span></td><td></td><td><span>');\nvar __val__ = transaction.comment\nbuf.push(escape(null == __val__ ? \"\" : __val__));\nbuf.push('</span></td><td><a class=\"edit\">Editer /</a><a class=\"delete\">Supprimer /</a><a href=\"#\" data-dropdown=\"drop1\" class=\"dropdown\">Dropdown Button<i class=\"fa fa-caret-down\"></i><ul id=\"drop1\" data-dropdown-content=\"data-dropdown-content\" class=\"f-dropdown\"><li><a class=\"delete\">Supprimer</a><li><a href=\"#\">This is another</a><li><a href=\"#\">Yet another</a></li></li></li></ul></a></td>');\n}\nreturn buf.join(\"\");\n};","var TransactionView = require('./transaction');\nvar Step1 = require('./modal_step1')\n\nmodule.exports = AppView = Backbone.View.extend({\n\n    el: 'body',\n    template: require('../templates/app'),\n    events: {\n        \"click #add-transaction\": \"createTransaction\",\n    },\n\n    // initialize is automatically called once after the view is contructed\n    initialize: function() {\n        this.listenTo(this.collection, \"add\", this.onTransactionAdded);\n    },\n\n    render: function() {\n\n        // we render the template\n        this.$el.html(this.template());\n        var step1 = new Step1()\n        step1.render()\n        // fetch the transactions from the database\n        this.collection.fetch();\n        // this.collection.seed()\n        var appjs = this\n        $(document).on('opened', '[data-reveal]', function () {\n          appjs.fillFields()\n        });\n    },\n\n    createTransaction: function(event) {\n        // submit button reload the page, we don't want that\n        event.preventDefault();\n\n        // add it to the collection\n        this.collection.create({\n            title: this.$el.find('input[name=\"title\"]').val(),\n            comment: this.$el.find('textarea[name=\"comment\"]').val(),\n            // trace: {\n\n            //         this.$el.find('select[name=\"proof_source\"]').val()\n            //         // window.local.selectedItem.origin\n            //     ],\n            // }\n            category: this.$el.find('select[name=\"cat\"]').val(),\n            subcategory: this.$el.find('select[name=\"subcat\"]').val(),\n            subsubcategory: this.$el.find('select[name=\"subsubcat\"]').val(),\n            barcode: this.$el.find('input[name=\"barcode\"]').val() || local.selectedItem.barcode,\n            url: this.$el.find('input[name=\"url\"]').val()\n\n        });\n        $('#step2').foundation('reveal', 'close');\n    },\n\n    // updateTransaction: function(event) {\n    //     var that = this\n    //     this.model.save({\n    //         barcode: this.$el.find('input[name=\"barcode\"]').val() // ou qqch comme ça\n    //     },\n    //     // alternative: ajouter un change listner qui rerender le bouzin\n    //     {\n    //         success: function(){\n    //             that.render()\n    //         },\n    //         error: function(){\n    //             console.log('doh!')\n    //         }\n    //     })\n    // },\n\n    onTransactionAdded: function(transaction) {\n        // render the specific element\n        transactionView = new TransactionView({\n            model: transaction\n        });\n        transactionView.render();\n        this.$el.find('tbody').append(transactionView.$el);\n    },\n\n    fillFields: function(){\n        // BARCODE\n        if(local.selectedItem && local.selectedItem.barcode){\n            $('#barcode input').remove()\n            $('#barcode').append(local.selectedItem.barcode)\n            // $.getJSON()\n        }\n\n        if(local.selectedItem && local.selectedItem.name){\n            $('#title input').val(local.selectedItem.name)\n        }\n    }\n});","ReceiptDetailsCollection = require('../collections/receiptdetails')\nSectionCollection = require('../collections/sections');\nReceiptDetailsCollection = require('../collections/receiptdetails')\nReceiptsCollection = require('../collections/receipts')\nPreview = require('./preview')\n\n\nmodule.exports = ReceiptDetail = Backbone.View.extend({\n\n    el: '#step1',\n    template: require('../templates/modal_step1'),\n\n     events: {\n        'change #source': 'getProofOptions',\n        'change #receipt': 'getReceiptSections',\n        'change #receiptelements': 'updateDetailsPreview',\n    },\n\n    render: function() {\n        this.$el.html(this.template({}))\n        $('#sources').fadeIn(1000)\n    },\n\n    getProofOptions: function(){\n        $('#receiptelements').hide()\n        $('#receipts').hide()\n        $('#detailspreview').hide()\n        reinitilizeLocalValues()\n\n        switch($('#source').val()){\n            case 'intermarche':\n                $('#receipts').fadeIn(1500)\n                this.receiptsCollection = new ReceiptsCollection\n                this.receiptsCollection.fetch()\n                this.listenTo(this.receiptsCollection, \"add\", this.onReceiptsAdded);\n                break;\n            case 'manuel':\n                $('#next').trigger('click')\n                break;\n        }\n    },\n\n\n\n\n    // SPECIFIQUE INTERMARCHE\n\n    onReceiptsAdded: function(model) {\n        opt = $('<option>').val(model.get('receiptId')).text(prettyDate(model.get('timestamp'))+ ' - ' + model.get('articlesCount') + \" articles\")\n        this.$('#receipts select').append(opt)\n    },\n\n    getReceiptSections: function(){\n        $('#receiptelements option').remove()\n        $('#detailspreview').hide().html('')\n\n        this.selectedReceiptId = $('#receipt').val()\n        this.sectionCollection = new SectionCollection([],{receiptId: this.selectedReceiptId})\n        this.sectionCollection.fetch()\n        this.listenTo(this.sectionCollection, \"add\", this.onReceiptSections);\n        window.local.selectedTicket = {}\n    },\n\n    onReceiptSections: function(model) {\n        $('#receiptelements')\n        $('#receiptelements').fadeIn(1500)\n        $('#receiptelements div').fadeIn(1500)\n        opt = $('<option>').val(model.id).text((model.get('sectionLabel').upAndDownCase())+' - ' + model.get('name')+' - '+ model.get('price')+'€' )\n        this.$('#receiptelements select').append(opt)\n        window.local.selectedTicket[model.id] = model.attributes\n\n        listToReorder($('#receiptelements select'),$('#receiptelements select').children('option').get())\n\n    },\n\n    updateDetailsPreview: function(){\n        $('#detailspreview').hide().html('')\n\n        window.local.selectedItemId = $('#receiptelements select').val()\n        window.local.selectedItem = window.local.selectedTicket[window.local.selectedItemId]\n        window.local.selectedItem\n        preview = new Preview({\n            model: window.local.selectedItem\n        })\n        preview.render()\n        $('#detailspreview').fadeIn(500)\n        $('#detailspreview div').fadeIn(500)\n        // $('#preview_image').error(this.$('#preview_image').hide())\n    }\n});","module.exports = ReceiptDetailPreview = Backbone.View.extend({\n\n    el: 'div',\n    template: require('../templates/preview'),\n\n     // events: {\n        // 'change #proof_source': 'getProofOptions',\n        // 'change #receipt': 'getReceiptSections',\n        // 'change #receiptelements': 'updateDetailsPreview'\n    // },\n\n    render: function() {\n        $('#detailspreview').html(this.template(this.model));\n        return this;\n    }\n})","module.exports = Transaction = Backbone.View.extend({\n\n    tagName: 'tr',\n    template: require('../templates/transaction'),\n    events: {\n        'click a.delete': 'deleteTransaction',\n        'click a.edit': 'editTransaction'\n    },\n\n    render: function() {\n        this.$el.html(this.template({\n            transaction: this.model.toJSON()\n        }));\n    },\n\n    deleteTransaction: function() {\n        this.model.destroy();\n        this.remove();\n    },\n\n    editTransaction: function(){\n        alert('fonctionnalité à venir')\n    }\n});"]}