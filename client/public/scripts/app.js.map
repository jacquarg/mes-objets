{"version":3,"file":"public/scripts/app.js","sources":["app/application.js","app/collections/receipts.js","app/collections/transactions.js","app/initialize.js","app/models/receipt.js","app/models/transaction.js","app/router.js","app/templates/home.jade","app/templates/transaction.jade","app/views/app_view.js","app/views/transaction.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AALA;;A,CCAA;;AACA;AACA;AACA;AACA;AAJA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;;A,CCAA;;AACA;AACA;AAFA;;A,CCAA;;AACA;AACA;AAFA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhCA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvDA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;;A","sourcesContent":["module.exports = {\n\n    initialize: function() {\n        var Router = require('router');\n        this.router = new Router();\n        Backbone.history.start();\n    }\n};","Receipt = require('../models/receipt');\nmodule.exports = Receipts = Backbone.Collection.extend({\n    model: Receipt,\n    url: 'receipts'\n})\n","Transaction = require('../models/transaction');\nmodule.exports = Transactions = Backbone.Collection.extend({\n    model: Transaction,\n    url: 'transactions'\n});","// The function called from index.html\n$(document).ready(function() {\n    var app = require('application');\n    app.initialize()\n\n    $(function(){\n        $(document).foundation();\n    });\n});\n","module.exports = Receipt = Backbone.Model.extend({\n\n})","module.exports = Transaction = Backbone.Model.extend({\n\n});","var AppView = require('views/app_view');\nvar TransactionCollection = require('collections/transactions');\n\nvar transactions = new TransactionCollection();\n\nmodule.exports = Router = Backbone.Router.extend({\n\n    routes: {\n        '': 'main'\n    },\n\n    main: function() {\n        var mainView = new AppView({\n            collection: transactions\n        });\n        mainView.render();\n    }\n});","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div class=\"large-offset-2 large-8 small-offset-1 small-10\"><h1>Transactions Tracker</h1><p>This application will help you manage your transactions!</p><a href=\"#\" data-reveal-id=\"step1\" class=\"radius button\">Ajouter une transaction</a><!--<Reveal>Modals begin</Reveal>--><div id=\"step1\" data-reveal=\"data-reveal\" class=\"reveal-modal\"><h2>Etape 1</h2><p>Choisissez les preuves d\\'achat à attacher</p><form><label>Source<select name=\"proof_source\"><option value=\"intermarche\">Intermarché</option><option value=\"intermarche\">SoGé</option></select></label><a href=\"#\" data-reveal-id=\"step2\" type=\"submit\" class=\"success radius button\">Etape 2...</a></form><a class=\"close-reveal-modal\">×</a></div><div id=\"step2\" data-reveal=\"data-reveal\" class=\"reveal-modal\"><form data-abide=\"data-abide\"><h2>Etape 2</h2><p>Editez les informations collectées</p><div class=\"title\"><label>Titre:</label><input type=\"text\" name=\"title\" required=\"required\"/></div><div class=\"category row collapse\"><div class=\"large-4 columns\"><label>Catégorie<select name=\"cat\"><option value=\"bricolage\">Bricolage</option><option value=\"starbuck\">Starbuck</option><option value=\"hotdog\">Hot Dog</option><option value=\"apollo\">Apollo</option></select></label></div><div class=\"large-4 columns\"><label>Sous-catégorie<select name=\"subcat\"><option value=\"pelle\">Pelle</option><option value=\"husker\">Husker</option><option value=\"starbuck\">Starbuck</option><option value=\"hotdog\">Hot Dog</option></select></label></div><div class=\"large-4 columns\"><label>Sous-sous-catégorie<select name=\"subsubcat\"><option value=\"pelleapicoucontondants\">Pelle à picous contondants</option><option value=\"husker\">Husker</option><option value=\"apollo\">Apollo</option><option value=\"starbuck\">Starbuck</option></select></label></div></div><div class=\"barcode\"><label>Code barre:</label><input type=\"text\" name=\"barcode\" required pattern=\"number\"/></div><div class=\"comment\"><label>Comment: (optionel)</label><textarea name=\"comment\"></textarea></div><div class=\"url\"><label>Url:</label><input type=\"text\" name=\"url\" pattern=\"url\"/></div><a href=\"#\" id=\"add-transaction\" type=\"submit\" class=\"success radius button\">Valider la nouvelle transaction</a></form><a class=\"close-reveal-modal\">×</a></div><!--<Reveal>Modals end</Reveal>--><local></local><table><thead><tr><th>Title</th><th>Categories</th><th>Barcode</th><th>URL</th><th>Traces</th><th width=\"100%\">Comments</th><th width=\"150\">Action</th></tr></thead><tbody></tbody></table><div id=\"receipts\"><p>hello receipts div</p></div></div>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<td><a href=\"transaction#show/tobeimplemented\">');\nvar __val__ = transaction.title\nbuf.push(escape(null == __val__ ? \"\" : __val__));\nbuf.push('</a></td><td><span>');\nvar __val__ = transaction.category[0]\nbuf.push(escape(null == __val__ ? \"\" : __val__));\nbuf.push('</span><br/><span>');\nvar __val__ = transaction.category[1]\nbuf.push(escape(null == __val__ ? \"\" : __val__));\nbuf.push('</span><br/><span>');\nvar __val__ = transaction.category[2]\nbuf.push(escape(null == __val__ ? \"\" : __val__));\nbuf.push('</span><br/></td><td><span>');\nvar __val__ = transaction.barcode\nbuf.push(escape(null == __val__ ? \"\" : __val__));\nbuf.push('</span></td><td><span>');\nvar __val__ = transaction.url\nbuf.push(escape(null == __val__ ? \"\" : __val__));\nbuf.push('</span></td><td><span>');\nvar __val__ = transaction.trace[0]\nbuf.push(escape(null == __val__ ? \"\" : __val__));\nbuf.push('</span></td><td><span>');\nvar __val__ = transaction.comment\nbuf.push(escape(null == __val__ ? \"\" : __val__));\nbuf.push('</span></td><td><a href=\"#\" data-dropdown=\"drop1\" class=\"dropdown\">Dropdown Button<i class=\"fa fa-caret-down\"></i><ul id=\"drop1\" data-dropdown-content=\"data-dropdown-content\" class=\"f-dropdown\"><li><a class=\"delete\">delete</a><a href=\"#\">This is a link</a><li><a href=\"#\">This is another</a><li><a href=\"#\">Yet another</a></li></li></li></ul></a></td>');\n}\nreturn buf.join(\"\");\n};","var TransactionView = require('./transaction');\n\nmodule.exports = AppView = Backbone.View.extend({\n\n    el: 'body',\n    template: require('../templates/home'),\n    events: {\n        \"click #add-transaction\": \"createTransaction\"\n    },\n\n    // initialize is automatically called once after the view is constructed\n    initialize: function() {\n        this.listenTo(this.collection, \"add\", this.onTransactionAdded);\n    },\n\n    render: function() {\n\n        // we render the template\n        this.$el.html(this.template());\n\n        // fetch the transactions from the database\n        this.collection.fetch();\n    },\n\n    createTransaction: function(event) {\n        // submit button reload the page, we don't want that\n        event.preventDefault();\n\n        // add it to the collection\n        this.collection.create({\n            title: this.$el.find('input[name=\"title\"]').val(),\n            comment: this.$el.find('textarea[name=\"comment\"]').val(),\n            trace: [\n                    this.$el.find('select[name=\"proof_source\"]').val()\n                ],\n            category: [\n                this.$el.find('select[name=\"cat\"]').val(),\n                this.$el.find('select[name=\"subcat\"]').val(),\n                this.$el.find('select[name=\"subsubcat\"]').val()\n            ],\n            barcode: this.$el.find('input[name=\"barcode\"]').val(),\n            url: this.$el.find('input[name=\"url\"]').val()\n\n        });\n        $('#step2').foundation('reveal', 'close');\n    },\n\n    onTransactionAdded: function(transaction) {\n        // render the specific element\n        transactionView = new TransactionView({\n            model: transaction\n        });\n        transactionView.render();\n        this.$el.find('tbody').append(transactionView.$el);\n    }\n});","module.exports = Transaction = Backbone.View.extend({\n\n    tagName: 'tr',\n    template: require('../templates/transaction'),\n    events: {\n        'click a.delete': 'deleteTransaction'\n    },\n\n    render: function() {\n        this.$el.html(this.template({\n            transaction: this.model.toJSON()\n        }));\n    },\n\n    deleteTransaction: function() {\n        this.model.destroy();\n        this.remove();\n    }\n});"]}