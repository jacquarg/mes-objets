{"version":3,"file":"public/scripts/app.js","sources":["app/application.js","app/collections/receiptdetails.js","app/collections/receipts.js","app/collections/sections.js","app/collections/transactions.js","app/initialize.js","app/models/receipt.js","app/models/receiptdetail.js","app/models/section.js","app/models/transaction.js","app/router.js","app/templates/app.jade","app/templates/modal_step1.jade","app/templates/transaction.jade","app/views/app.js","app/views/modal_step1.js","app/views/transaction.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;;A,CCAA;;AACA;AACA;AACA;AACA;AAJA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxBA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AANA;;A,CCAA;;AACA;AACA;AAFA;;A,CCAA;;AACA;AACA;AAFA;;A,CCAA;;AACA;AACA;AAFA;;A,CCAA;;AACA;AADA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/BA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxtGA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBA;;A","sourcesContent":["module.exports = {\n\n    initialize: function() {\n        var Router = require('router');\n        this.router = new Router();\n        Backbone.history.start();\n    }\n};","ReceiptDetail = require('../models/receiptdetail');\n\nmodule.exports = ReceiptDetails = Backbone.Collection.extend({\n    model: ReceiptDetail,\n    url: 'receiptdetails',\n    seed: function(){\n        console.log('receipt seeding :D')\n        this.create({\n            id: '123',\n            barcode: \"1234567890\"\n        })\n    }\n})\n","Receipt = require('../models/receipt');\nmodule.exports = Receipts = Backbone.Collection.extend({\n    model: Receipt,\n    url: 'receipts'\n})","Section = require('../models/section');\nmodule.exports = Sections = Backbone.Collection.extend({\n\n    initialize: function(models, options) {\n        this.receiptId = options.receiptId;\n    },\n\n    url: function() {\n        // return 'receipts/' + this.receiptId + '/sections';\n        return 'receipts/' + \"5102589\" + '/sections';\n    },\n    model: Section,\n\n});","Transaction = require('../models/transaction');\n\nmodule.exports = Transactions = Backbone.Collection.extend({\n    model: Transaction,\n    url: 'transactions',\n    // seed: function(){\n    //     // not working\n    //     console.log('seeding!')\n    //     this.create({\n    //         id:\"1231512512341512412\",\n    //         title: \"Pelle à picous\",\n    //         comment: \"Très belle pelle\",\n    //         trace: [\n    //                 \"intermarché\"\n    //             ],\n    //         category: [\n    //             \"Bricolage\",\n    //             \"Pelle\",\n    //             \"Pelle à picous\"\n    //         ],\n    //         barcode: \"1248193523\",\n    //         url: \"http://pelle-a-picous.love\"\n    //     });\n    // }\n});","// The function called from index.html\n$(document).ready(function() {\n    var app = require('application');\n    app.initialize()\n\n    $(document).foundation();\n});","module.exports = Receipt = Backbone.Model.extend({\n\n})","module.exports = ReceiptDetail = Backbone.Model.extend({\n\n})","module.exports = Section = Backbone.Model.extend({\n\n});","module.exports = Transaction = Backbone.Model.extend({\n});","var AppView = require('views/app');\nvar TransactionCollection = require('collections/transactions');\nvar ReceiptDetailCollection = require('collections/receiptdetails');\n\nvar transactions = new TransactionCollection();\nvar receiptdetails = new ReceiptDetailCollection();\n\nmodule.exports = Router = Backbone.Router.extend({\n\n    routes: {\n        '': 'main'\n    },\n\n    main: function() {\n        var mainView = new AppView({\n            collection: transactions,\n            receiptcollection: receiptdetails\n        });\n        mainView.render();\n    }\n});","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div class=\"row\"><div class=\"large-8 columns\"><h1>Transactions Tracker</h1><p>This application will help you manage your transactions!</p></div><div class=\"large-4 columns\"><a id=\"addtransacbutton\" href=\"#\" data-reveal-id=\"step1\" class=\"radius button\">Ajouter une transaction</a></div><!--<Reveal>Modals begin</Reveal>--><div id=\"step1\" data-reveal=\"data-reveal\" class=\"reveal-modal\"></div><div id=\"step2\" data-reveal=\"data-reveal\" class=\"reveal-modal\"><form data-abide=\"data-abide\"><h2>Etape 2</h2><p>Editez les informations collectées</p><div class=\"title\"><label>Titre:</label><input type=\"text\" name=\"title\" required=\"required\"/></div><div class=\"category row collapse\"><div class=\"large-4 columns\"><label>Catégorie<select name=\"cat\"><option value=\"bricolage\">Bricolage</option><option value=\"starbuck\">Starbuck</option><option value=\"hotdog\">Hot Dog</option><option value=\"apollo\">Apollo</option></select></label></div><div class=\"large-4 columns\"><label>Sous-catégorie<select name=\"subcat\"><option value=\"pelle\">Pelle</option><option value=\"husker\">Husker</option><option value=\"starbuck\">Starbuck</option><option value=\"hotdog\">Hot Dog</option></select></label></div><div class=\"large-4 columns\"><label>Sous-sous-catégorie<select name=\"subsubcat\"><option value=\"pelleapicoucontondants\">Pelle à picous contondants</option><option value=\"husker\">Husker</option><option value=\"apollo\">Apollo</option><option value=\"starbuck\">Starbuck</option></select></label></div></div><div class=\"barcode\"><label>Code barre:</label><input type=\"text\" name=\"barcode\" required pattern=\"number\"/></div><div class=\"comment\"><label>Comment: (optionel)</label><textarea name=\"comment\"></textarea></div><div class=\"url\"><label>Url:</label><input type=\"text\" name=\"url\" pattern=\"url\"/></div><a href=\"#\" id=\"add-transaction\" type=\"submit\" class=\"success radius button\">Valider la nouvelle transaction</a></form><a class=\"close-reveal-modal\">×</a></div><!--<Reveal>Modals end</Reveal>--></div><div class=\"row\"><table><thead><tr><th width=\"100%\">Title</th><th>Categories</th><th>Barcode</th><th>URL</th><th>Traces</th><th>Comments</th><th>Action</th></tr></thead><tbody></tbody></table><div id=\"preview\" class=\"panel\"><p><em>Selectionnez une transaction</em></p></div></div><div id=\"barcodes\"></div>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<h2>Etape 1<p>Choisissez les preuves d\\'achat à attacher</p><form><div id=\"source\"><label>Source</label><select id=\"proof_source\" name=\"proof_source\"><option value=\"null\">== Choisissez une source d\\'information ==</option><option value=\"intermarche\">Intermarché</option><option value=\"intermarche\">SoGé</option></select></div><div id=\"receipts\"><label>Tickets de caisse</label><select id=\"receipt\" name=\"receipt\"><option value=\"null\">== Choisissez un ticket de caisse ==</option></select></div><div id=\"receiptelements\"><label>Détails du ticket</label><select id=\"receipt_details\" name=\"receipt_details\"><option value=\"null\">== Choisissez une ligne du ticket ==</option></select></div></form><div id=\"manualbarcode\"><span>ou entrer le code bar manuellement<input placeholder=\"barcode\"/></span></div><a href=\"#\" data-reveal-id=\"step2\" type=\"submit\" class=\"success radius button\">Etape 2...</a><a class=\"close-reveal-modal\">×</a></h2>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<td><a');\nbuf.push(attrs({ 'href':(\"transaction#show/\" + (transaction.id) + \"\") }, {\"href\":true}));\nbuf.push('>');\nvar __val__ = transaction.title\nbuf.push(escape(null == __val__ ? \"\" : __val__));\nbuf.push('</a></td><td><span>');\nvar __val__ = transaction.category\nbuf.push(escape(null == __val__ ? \"\" : __val__));\nbuf.push('</span><br/><span>');\nvar __val__ = transaction.subcategory\nbuf.push(escape(null == __val__ ? \"\" : __val__));\nbuf.push('</span><br/><span>');\nvar __val__ = transaction.subsubcategory\nbuf.push(escape(null == __val__ ? \"\" : __val__));\nbuf.push('</span><br/></td><td><span>');\nvar __val__ = transaction.barcode\nbuf.push(escape(null == __val__ ? \"\" : __val__));\nbuf.push('</span></td><td><span>');\nvar __val__ = transaction.url\nbuf.push(escape(null == __val__ ? \"\" : __val__));\nbuf.push('</span></td><td></td><td><span>');\nvar __val__ = transaction.comment\nbuf.push(escape(null == __val__ ? \"\" : __val__));\nbuf.push('</span></td><td><a class=\"edit\">Editer /</a><a class=\"delete\">Supprimer /</a><a href=\"#\" data-dropdown=\"drop1\" class=\"dropdown\">Dropdown Button<i class=\"fa fa-caret-down\"></i><ul id=\"drop1\" data-dropdown-content=\"data-dropdown-content\" class=\"f-dropdown\"><li><a class=\"delete\">Supprimer</a><li><a href=\"#\">This is another</a><li><a href=\"#\">Yet another</a></li></li></li></ul></a></td>');\n}\nreturn buf.join(\"\");\n};","var TransactionView = require('./transaction');\nvar Step1 = require('./modal_step1')\n\nmodule.exports = AppView = Backbone.View.extend({\n\n    el: 'body',\n    template: require('../templates/app'),\n    events: {\n        \"click #add-transaction\": \"createTransaction\"\n    },\n\n    // initialize is automatically called once after the view is contructed\n    initialize: function() {\n        this.listenTo(this.collection, \"add\", this.onTransactionAdded);\n    },\n\n    render: function() {\n\n        // we render the template\n        this.$el.html(this.template());\n        var step1 = new Step1()\n        step1.render()\n        // fetch the transactions from the database\n        this.collection.fetch();\n        // this.collection.seed()\n    },\n\n    createTransaction: function(event) {\n        // submit button reload the page, we don't want that\n        event.preventDefault();\n\n        // add it to the collection\n        this.collection.create({\n            title: this.$el.find('input[name=\"title\"]').val(),\n            comment: this.$el.find('textarea[name=\"comment\"]').val(),\n            trace: [\n                    this.$el.find('select[name=\"proof_source\"]').val()\n                ],\n            category: this.$el.find('select[name=\"cat\"]').val(),\n            subcategory: this.$el.find('select[name=\"subcat\"]').val(),\n            subsubcategory: this.$el.find('select[name=\"subsubcat\"]').val(),\n            barcode: this.$el.find('input[name=\"barcode\"]').val(),\n            url: this.$el.find('input[name=\"url\"]').val()\n\n        });\n        $('#step2').foundation('reveal', 'close');\n    },\n\n    // updateTransaction: function(event) {\n    //     var that = this\n    //     this.model.save({\n    //         barcode: this.$el.find('input[name=\"barcode\"]').val() // ou qqch comme ça\n    //     },\n    //     // alternative: ajouter un change listner qui rerender le bouzin\n    //     {\n    //         success: function(){\n    //             that.render()\n    //         },\n    //         error: function(){\n    //             console.log('doh!')\n    //         }\n    //     })\n    // },\n\n    onTransactionAdded: function(transaction) {\n        // render the specific element\n        transactionView = new TransactionView({\n            model: transaction\n        });\n        transactionView.render();\n        this.$el.find('tbody').append(transactionView.$el);\n    },\n});","ReceiptDetailsCollection = require('../collections/receiptdetails')\nSectionCollection = require('../collections/sections');\nReceiptDetailsCollection = require('../collections/receiptdetails')\nReceiptsCollection = require('../collections/receipts')\n\nmodule.exports = ReceiptDetail = Backbone.View.extend({\n\n    el: '#step1',\n    template: require('../templates/modal_step1'),\n\n     events: {\n        'change #proof_source': 'getProofOptions',\n        'change #receipt': 'getReceiptSections',\n        // 'change #receiptsections': 'getReceiptSectionDetails'\n    },\n\n    render: function() {\n        this.$el.html(this.template({}))\n        $('#source').fadeIn(1000)\n    },\n\n    getProofOptions: function(){\n        $('#receipts').fadeIn(1500)\n        switch($('#proof_source').val()){\n            case 'intermarche':\n                this.receiptsCollection = new ReceiptsCollection\n                this.receiptsCollection.fetch()\n                this.listenTo(this.receiptsCollection, \"add\", this.onReceiptsAdded);\n\n\n                // this.collection = new ReceiptDetailsCollection\n                // this.listenTo(this.collection, \"add\", this.onReceiptSections);\n                // this.collection.seed()\n                break;\n        }\n    },\n\n    onReceiptsAdded: function(model) {\n        opt = $('<option>').val(model.get('receiptId')).text(model.get('snippet')+ ' - Nombre d\\'articles :'  + model.get('articlesCount'))\n        this.$('#receipts select').append(opt)\n    },\n\n    getReceiptSections: function(){\n        this.selectedReceiptId = $('#receipt').val()\n        this.sectionCollection = new SectionCollection([],{receiptId: this.selectedReceiptId})\n        this.sectionCollection.fetch()\n        this.listenTo(this.sectionCollection, \"add\", this.onReceiptSections);\n    },\n\n    onReceiptSections: function(model) {\n\n        var upAndDownCase = function(string){\n            return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n        }\n\n        $('#receiptelements').fadeIn(1500)\n        opt = $('<option>').val(model.id).text(upAndDownCase(model.get('sectionLabel'))+' - ' + model.get('name')+' - '+ model.get('price')+'€' ).data('details', {\n            origin: model.get('origin'),\n            order: model.get('order'),\n            barcode: model.get('barcode'),\n            label: model.get('label'),\n            family: model.get('family'),\n            familyLabel: model.get('familyLabel'),\n            section: model.get('section'),\n            sectionLabel: model.get('sectionLabel'),\n            amount: model.get('amount'),\n            price: model.get('price'),\n            type: model.get('type'),\n            typeLabel: model.get('typeLabel'),\n            receiptId: model.get('receiptId'),\n            intermarcheShopId: model.get('intermarcheShopId'),\n            timestamp: model.get('timestamp'),\n            isOnlineBuy: model.get('isOnlineBuy'),\n            aggregatedSection: model.get('aggregatedSection'),\n            quantityUnit: model.get('quantityUnit'),\n            quantityAmount: model.get('quantityAmount'),\n            quantityWeight: model.get('quantityWeight'),\n            quantityLabel: model.get('quantityLabel'),\n            name: model.get('name')\n        })\n        this.$('#receiptelements select').append(opt)\n\n        var listToReorder = $('#receiptelements select');\n        var listitems = $('#receiptelements select').children('option').get();\n        listitems.sort(function(a, b) {\n           return $(a).text().toUpperCase().localeCompare($(b).text().toUpperCase());\n        })\n        $.each(listitems, function(idx, itm) { listToReorder.append(itm); });\n\n        // $('#receiptsections').change(model.get('receiptDetails'), function(receiptdetails){\n\n        //     $('#receiptelements').fadeIn(1500)\n        //     //         console.log(this)\n        //     // );\n\n        // })\n\n    },\n});\n\n\n\n","module.exports = Transaction = Backbone.View.extend({\n\n    tagName: 'tr',\n    template: require('../templates/transaction'),\n    events: {\n        'click a.delete': 'deleteTransaction',\n        'click a.edit': 'editTransaction'\n    },\n\n    render: function() {\n        this.$el.html(this.template({\n            transaction: this.model.toJSON()\n        }));\n    },\n\n    deleteTransaction: function() {\n        this.model.destroy();\n        this.remove();\n    },\n\n    editTransaction: function(){\n        alert('fonctionnalité à venir')\n    }\n});"]}